package prati_sgcq.view.padroes;

import java.awt.Cursor;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.util.ArrayList;
import javax.persistence.EntityManager;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import prati_sgcq.connection.ConnectionFactory;
import prati_sgcq.dao.PadroesConfigDAO;
import prati_sgcq.dao.PadroesDAO;
import prati_sgcq.model.Padroes;
import prati_sgcq.model.PadroesConfig;
import prati_sgcq.view.FrmSalvar;


/**
 *
 * @author rafael.lopes
 */
public class FrmPadroes extends javax.swing.JFrame {

    /**
     * Creates new form FrmPadoes
     */
    public FrmPadroes() {
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        URL url = this.getClass().getResource("/Imagem/icon_padrao.png");
        Image icone = Toolkit.getDefaultToolkit().getImage(url);
        setIconImage(icone);
        setTitle("Padrões");
        setExtendedState(MAXIMIZED_BOTH);
        //readAuditoriaPadroes();
        fecharDados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPlacebos = new javax.swing.JTabbedPane();
        pnlPlacebo = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPadrao = new javax.swing.JTable();
        txtPesquisar = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        btnNovo = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        btnEditar = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        btnEditarLote2 = new javax.swing.JButton();
        jSeparator12 = new javax.swing.JToolBar.Separator();
        btnExcluir = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnAtualizar = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        btnImprimir = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        btnEditarLote = new javax.swing.JButton();
        jSeparator11 = new javax.swing.JToolBar.Separator();
        btnEditarLote1 = new javax.swing.JButton();
        pnlDados = new javax.swing.JPanel();
        btnFechar = new javax.swing.JButton();
        pnlDadosProduto = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtCodMaterial = new javax.swing.JTextField();
        txtNomeMaterial = new javax.swing.JTextField();
        txtMetodo = new javax.swing.JTextField();
        txtTipo = new javax.swing.JTextField();
        txtIdProduto = new javax.swing.JTextField();
        txtCodMetodo = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtObs = new javax.swing.JTextField();
        txtSetor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtMetodo1 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        pnlLotesPlacebo = new javax.swing.JPanel();
        btnAdicionarLote = new javax.swing.JButton();
        btnRemoverLote = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLotes = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtPesquisar1 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblAuditoriaPadrao = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Padrões"));

        tblPadrao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "configPadroes_id", "Código", "Nome", "SAP", "CAS", "Controle Especial", "Data Atualização", "Usuário Atualização", "Versão"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPadrao.setSurrendersFocusOnKeystroke(true);
        tblPadrao.getTableHeader().setReorderingAllowed(false);
        tblPadrao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPadraoMouseClicked(evt);
            }
        });
        tblPadrao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblPadraoKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblPadrao);
        if (tblPadrao.getColumnModel().getColumnCount() > 0) {
            tblPadrao.getColumnModel().getColumn(0).setMinWidth(80);
            tblPadrao.getColumnModel().getColumn(0).setPreferredWidth(80);
            tblPadrao.getColumnModel().getColumn(0).setMaxWidth(80);
            tblPadrao.getColumnModel().getColumn(1).setMinWidth(0);
            tblPadrao.getColumnModel().getColumn(1).setPreferredWidth(0);
            tblPadrao.getColumnModel().getColumn(1).setMaxWidth(0);
            tblPadrao.getColumnModel().getColumn(1).setHeaderValue("configPadroes_id");
            tblPadrao.getColumnModel().getColumn(2).setMinWidth(100);
            tblPadrao.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblPadrao.getColumnModel().getColumn(2).setMaxWidth(100);
            tblPadrao.getColumnModel().getColumn(3).setPreferredWidth(300);
            tblPadrao.getColumnModel().getColumn(4).setMinWidth(100);
            tblPadrao.getColumnModel().getColumn(4).setPreferredWidth(100);
            tblPadrao.getColumnModel().getColumn(4).setMaxWidth(100);
            tblPadrao.getColumnModel().getColumn(5).setMinWidth(120);
            tblPadrao.getColumnModel().getColumn(5).setPreferredWidth(120);
            tblPadrao.getColumnModel().getColumn(5).setMaxWidth(120);
            tblPadrao.getColumnModel().getColumn(6).setMinWidth(120);
            tblPadrao.getColumnModel().getColumn(6).setPreferredWidth(120);
            tblPadrao.getColumnModel().getColumn(6).setMaxWidth(120);
            tblPadrao.getColumnModel().getColumn(7).setMinWidth(150);
            tblPadrao.getColumnModel().getColumn(7).setPreferredWidth(150);
            tblPadrao.getColumnModel().getColumn(7).setMaxWidth(150);
            tblPadrao.getColumnModel().getColumn(8).setMinWidth(200);
            tblPadrao.getColumnModel().getColumn(8).setPreferredWidth(200);
            tblPadrao.getColumnModel().getColumn(8).setMaxWidth(200);
            tblPadrao.getColumnModel().getColumn(9).setMinWidth(80);
            tblPadrao.getColumnModel().getColumn(9).setPreferredWidth(80);
            tblPadrao.getColumnModel().getColumn(9).setMaxWidth(80);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 909, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
        );

        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });

        jLabel4.setText("Pesquisar:");

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_add.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.setFocusable(false);
        btnNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNovo);
        jToolBar1.add(jSeparator6);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_edit.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setFocusable(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditar);
        jToolBar1.add(jSeparator8);

        btnEditarLote2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_dados.png"))); // NOI18N
        btnEditarLote2.setText("Dados");
        btnEditarLote2.setFocusable(false);
        btnEditarLote2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditarLote2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditarLote2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarLote2ActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditarLote2);
        jToolBar1.add(jSeparator12);

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_close.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setFocusable(false);
        btnExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExcluir.setPreferredSize(new java.awt.Dimension(60, 60));
        btnExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExcluir);
        jToolBar1.add(jSeparator2);

        btnAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_atualizar.png"))); // NOI18N
        btnAtualizar.setText("Atualizar");
        btnAtualizar.setFocusable(false);
        btnAtualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAtualizar.setPreferredSize(new java.awt.Dimension(60, 60));
        btnAtualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAtualizar);
        jToolBar1.add(jSeparator7);

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_print.png"))); // NOI18N
        btnImprimir.setText("Relatórios");
        btnImprimir.setFocusable(false);
        btnImprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnImprimir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnImprimir);
        jToolBar1.add(jSeparator10);

        btnEditarLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_caixa_cheia.png"))); // NOI18N
        btnEditarLote.setText("Estoque");
        btnEditarLote.setFocusable(false);
        btnEditarLote.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditarLote.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditarLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarLoteActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditarLote);
        jToolBar1.add(jSeparator11);

        btnEditarLote1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_historico.png"))); // NOI18N
        btnEditarLote1.setText("Histórico");
        btnEditarLote1.setFocusable(false);
        btnEditarLote1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditarLote1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditarLote1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarLote1ActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditarLote1);

        javax.swing.GroupLayout pnlPlaceboLayout = new javax.swing.GroupLayout(pnlPlacebo);
        pnlPlacebo.setLayout(pnlPlaceboLayout);
        pnlPlaceboLayout.setHorizontalGroup(
            pnlPlaceboLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPlaceboLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPlaceboLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPlaceboLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisar))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlPlaceboLayout.setVerticalGroup(
            pnlPlaceboLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPlaceboLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPlaceboLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(11, 11, 11)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlPlacebos.addTab("Padrões", pnlPlacebo);

        pnlDados.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        pnlDadosProduto.setBorder(javax.swing.BorderFactory.createTitledBorder("Produto"));

        jLabel7.setText("Nome:");

        jLabel10.setText("SAP:");

        jLabel3.setText("CAS:");

        jLabel8.setText("Código:");

        txtCodMaterial.setEditable(false);
        txtCodMaterial.setBackground(new java.awt.Color(204, 204, 204));

        txtNomeMaterial.setEditable(false);
        txtNomeMaterial.setBackground(new java.awt.Color(204, 204, 204));

        txtMetodo.setEditable(false);
        txtMetodo.setBackground(new java.awt.Color(204, 204, 204));

        txtTipo.setEditable(false);
        txtTipo.setBackground(new java.awt.Color(204, 204, 204));

        txtIdProduto.setEditable(false);
        txtIdProduto.setBackground(new java.awt.Color(204, 204, 204));

        txtCodMetodo.setEditable(false);
        txtCodMetodo.setBackground(new java.awt.Color(204, 204, 204));

        jLabel28.setText("Forma Farmacêutica:");

        jLabel35.setText("Lista:");

        jLabel6.setText("Obs:");

        txtObs.setEditable(false);
        txtObs.setBackground(new java.awt.Color(204, 204, 204));

        txtSetor.setEditable(false);
        txtSetor.setBackground(new java.awt.Color(204, 204, 204));

        jLabel5.setText("Data Cadastro:");

        jLabel9.setText("Última Atualização:");

        txtMetodo1.setEditable(false);
        txtMetodo1.setBackground(new java.awt.Color(204, 204, 204));

        jCheckBox1.setText("Controle Especial");
        jCheckBox1.setEnabled(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDadosProdutoLayout = new javax.swing.GroupLayout(pnlDadosProduto);
        pnlDadosProduto.setLayout(pnlDadosProdutoLayout);
        pnlDadosProdutoLayout.setHorizontalGroup(
            pnlDadosProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDadosProdutoLayout.createSequentialGroup()
                        .addGroup(pnlDadosProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosProdutoLayout.createSequentialGroup()
                                .addComponent(txtCodMetodo, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSetor, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDadosProdutoLayout.createSequentialGroup()
                                .addComponent(txtCodMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDadosProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlDadosProdutoLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMetodo1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDadosProdutoLayout.createSequentialGroup()
                                .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIdProduto))))
                    .addComponent(txtObs)
                    .addComponent(txtNomeMaterial))
                .addContainerGap())
        );
        pnlDadosProdutoLayout.setVerticalGroup(
            pnlDadosProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtCodMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMetodo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtCodMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28)
                    .addComponent(txtSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(jLabel3)
                    .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlLotesPlacebo.setBorder(javax.swing.BorderFactory.createTitledBorder("Lotes"));

        btnAdicionarLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_plus.png"))); // NOI18N
        btnAdicionarLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarLoteActionPerformed(evt);
            }
        });

        btnRemoverLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_remove.png"))); // NOI18N
        btnRemoverLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverLoteActionPerformed(evt);
            }
        });

        tblLotes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Lote", "Quantidade", "Fabricação", "Validade", "Solicitação", "Recebimento", "Obs"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLotes.setSurrendersFocusOnKeystroke(true);
        tblLotes.getTableHeader().setReorderingAllowed(false);
        tblLotes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLotesMouseClicked(evt);
            }
        });
        tblLotes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblLotesKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblLotes);

        javax.swing.GroupLayout pnlLotesPlaceboLayout = new javax.swing.GroupLayout(pnlLotesPlacebo);
        pnlLotesPlacebo.setLayout(pnlLotesPlaceboLayout);
        pnlLotesPlaceboLayout.setHorizontalGroup(
            pnlLotesPlaceboLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLotesPlaceboLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlLotesPlaceboLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemoverLote, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarLote, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlLotesPlaceboLayout.setVerticalGroup(
            pnlLotesPlaceboLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLotesPlaceboLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLotesPlaceboLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLotesPlaceboLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(pnlLotesPlaceboLayout.createSequentialGroup()
                        .addComponent(btnAdicionarLote, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoverLote, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 205, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout pnlDadosLayout = new javax.swing.GroupLayout(pnlDados);
        pnlDados.setLayout(pnlDadosLayout);
        pnlDadosLayout.setHorizontalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDadosProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlLotesPlacebo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlDadosLayout.setVerticalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDadosProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlLotesPlacebo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFechar)
                .addGap(13, 13, 13))
        );

        pnlPlacebos.addTab("Dados", pnlDados);

        jLabel11.setText("Pesquisar:");

        txtPesquisar1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisar1KeyReleased(evt);
            }
        });

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Padrões"));

        tblAuditoriaPadrao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Código", "Nome", "SAP", "CAS", "Controle Especial", "Data Atualização", "Usuário Atualização", "Versão"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAuditoriaPadrao.setSurrendersFocusOnKeystroke(true);
        tblAuditoriaPadrao.getTableHeader().setReorderingAllowed(false);
        tblAuditoriaPadrao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAuditoriaPadraoMouseClicked(evt);
            }
        });
        tblAuditoriaPadrao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblAuditoriaPadraoKeyPressed(evt);
            }
        });
        jScrollPane8.setViewportView(tblAuditoriaPadrao);
        if (tblAuditoriaPadrao.getColumnModel().getColumnCount() > 0) {
            tblAuditoriaPadrao.getColumnModel().getColumn(0).setMinWidth(80);
            tblAuditoriaPadrao.getColumnModel().getColumn(0).setPreferredWidth(80);
            tblAuditoriaPadrao.getColumnModel().getColumn(0).setMaxWidth(80);
            tblAuditoriaPadrao.getColumnModel().getColumn(1).setMinWidth(100);
            tblAuditoriaPadrao.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblAuditoriaPadrao.getColumnModel().getColumn(1).setMaxWidth(100);
            tblAuditoriaPadrao.getColumnModel().getColumn(2).setPreferredWidth(300);
            tblAuditoriaPadrao.getColumnModel().getColumn(3).setMinWidth(100);
            tblAuditoriaPadrao.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblAuditoriaPadrao.getColumnModel().getColumn(3).setMaxWidth(100);
            tblAuditoriaPadrao.getColumnModel().getColumn(4).setMinWidth(120);
            tblAuditoriaPadrao.getColumnModel().getColumn(4).setPreferredWidth(120);
            tblAuditoriaPadrao.getColumnModel().getColumn(4).setMaxWidth(120);
            tblAuditoriaPadrao.getColumnModel().getColumn(5).setMinWidth(120);
            tblAuditoriaPadrao.getColumnModel().getColumn(5).setPreferredWidth(120);
            tblAuditoriaPadrao.getColumnModel().getColumn(5).setMaxWidth(120);
            tblAuditoriaPadrao.getColumnModel().getColumn(6).setMinWidth(150);
            tblAuditoriaPadrao.getColumnModel().getColumn(6).setPreferredWidth(150);
            tblAuditoriaPadrao.getColumnModel().getColumn(6).setMaxWidth(150);
            tblAuditoriaPadrao.getColumnModel().getColumn(7).setMinWidth(200);
            tblAuditoriaPadrao.getColumnModel().getColumn(7).setPreferredWidth(200);
            tblAuditoriaPadrao.getColumnModel().getColumn(7).setMaxWidth(200);
            tblAuditoriaPadrao.getColumnModel().getColumn(8).setMinWidth(80);
            tblAuditoriaPadrao.getColumnModel().getColumn(8).setPreferredWidth(80);
            tblAuditoriaPadrao.getColumnModel().getColumn(8).setMaxWidth(80);
        }

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisar1, javax.swing.GroupLayout.DEFAULT_SIZE, 859, Short.MAX_VALUE)
                        .addGap(18, 18, 18))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtPesquisar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlPlacebos.addTab("Auditoria", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(pnlPlacebos)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(pnlPlacebos))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblPadraoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPadraoMouseClicked
        if (evt.getClickCount() == 2) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            carregarDados((Integer) tblPadrao.getValueAt(tblPadrao.getSelectedRow(), 0));
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_tblPadraoMouseClicked

    private void tblPadraoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblPadraoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            if (tblPadrao.getSelectedRow() != -1) {
                deletar((Integer) tblPadrao.getValueAt(tblPadrao.getSelectedRow(), 0));
            }
        }
    }//GEN-LAST:event_tblPadraoKeyPressed

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
        DefaultTableModel model = (DefaultTableModel) tblPadrao.getModel();
        TableRowSorter sorter = new TableRowSorter<>(model);
        tblPadrao.setRowSorter(sorter);
        String text = txtPesquisar.getText().trim();
        String parametro = "*";
        if (text.length() == 0) {
            sorter.setRowFilter(null);
        } else if (text.indexOf(parametro) > 0) {
            ArrayList<RowFilter<Object, Object>> andFilters = new ArrayList<>();
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(0, text.indexOf(parametro)).trim().toUpperCase()));
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(text.indexOf(parametro) + 1, text.length()).trim().toUpperCase()));
            sorter.setRowFilter(RowFilter.andFilter(andFilters));
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text.toUpperCase()));
        }
    }//GEN-LAST:event_txtPesquisarKeyReleased

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        FrmPadroesConfig frm = new FrmPadroesConfig(null, true);
        frm.setVisible(true);
        readPadroes();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (tblPadrao.getSelectedRow() != -1) {
            Integer id = ((Integer) tblPadrao.getValueAt(tblPadrao.getSelectedRow(), 1));
            FrmPadroesConfig frm = new FrmPadroesConfig(null, true, id);
            frm.setVisible(true);
            readPadroes();
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEditarLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarLoteActionPerformed
        if (tblPadrao.getSelectedRow() != -1) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            carregarDados((Integer) tblPadrao.getValueAt(tblPadrao.getSelectedRow(), 0));
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_btnEditarLoteActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if (tblPadrao.getSelectedRow() != -1) {
            deletar((Integer) tblPadrao.getValueAt(tblPadrao.getSelectedRow(), 0));
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        readPadroes();
        readAuditoriaPadroes();
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        //        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        //        String setor = cmbSetor.getSelectedItem().toString();
        //        String turno = cmbTurno.getSelectedItem().toString();
        //        FrmImprimirTreinamentos frm = new FrmImprimirTreinamentos(null, true, setor, turno);
        //        frm.setVisible(true);
        //        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));

        //                if (tblPlacebo.getSelectedRow() != -1) {
        //            int dialogResult = JOptionPane.showConfirmDialog(null,
        //                    "Deseja Imprimir Etiqueta da Coluna?", "Aviso", JOptionPane.YES_NO_OPTION);
        //            if (dialogResult == 0) {
        //                final FrmCarregando frm = new FrmCarregando();
        //                frm.setVisible(true);
        //                Thread t1 = new Thread() {
        //                    @Override
        //                    public void run() {
        //                        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        ////                        ColunaDAO.printEtiquetaColuna(tblPlacebo.getValueAt(tblPlacebo.getSelectedRow(), 0).toString(),
        ////                                tblPlacebo.getValueAt(tblPlacebo.getSelectedRow(), 5).toString());
        //                        frm.dispose();
        //                        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        //                    }
        //                };
        //                t1.start();
        //            }
        //        }
 
            


    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        fecharDados();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnAdicionarLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarLoteActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
//        Placebo placebo = new Placebo();
//        placebo.setPlacebo_id(placebo_id);
//        FrmConfigLotePlacebo frm = new FrmConfigLotePlacebo(null, true, placebo);
//        frm.setVisible(true);
//        readLotePlacebo(placebo_id);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnAdicionarLoteActionPerformed

    private void btnRemoverLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverLoteActionPerformed
        if (tblLotes.getSelectedRow() != -1) {
            try {
                int dialogResult = JOptionPane.showConfirmDialog(null,
                        "Deseja excluir esse lote de Placebo?", "Aviso", JOptionPane.YES_NO_OPTION);
                if (dialogResult == 0) {
                    FrmSalvar frmSalvar = new FrmSalvar(null, true);
                    frmSalvar.setVisible(true);
                    if (FrmSalvar.senha()) {
                        deletarPlaceboLote((Integer) tblLotes.getValueAt(tblLotes.getSelectedRow(), 0));
                        DefaultTableModel model = (DefaultTableModel) tblLotes.getModel();
                        model.removeRow(tblLotes.getSelectedRow());
                        //readLotePlacebo(placebo_id);
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atulalizar dados: " + e);
            }
        }
    }//GEN-LAST:event_btnRemoverLoteActionPerformed

    private void tblLotesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLotesMouseClicked
//        PlaceboAcesso Acesso = new PlaceboAcesso();
//        if (Acesso.verificarEditarLote()) {
//            if (evt.getClickCount() == 2) {
//                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
//                Placebo placebo = new Placebo();
//                placebo.setPlacebo_id(placebo_id);
//                placebo.setPlacebo_lote_id((Integer) tblLotes.getValueAt(tblLotes.getSelectedRow(), 0));
//                FrmConfigLotePlacebo frm = new FrmConfigLotePlacebo(null, true, placebo);
//                frm.setVisible(true);
//                readLotePlacebo(placebo_id);
//                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
//            }
//        }
    }//GEN-LAST:event_tblLotesMouseClicked

    private void tblLotesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblLotesKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            if (tblLotes.getSelectedRow() != -1) {
                try {
                    int dialogResult = JOptionPane.showConfirmDialog(null,
                            "Deseja excluir esse lote de Placebo?", "Aviso", JOptionPane.YES_NO_OPTION);
                    if (dialogResult == 0) {
                        FrmSalvar frmSalvar = new FrmSalvar(null, true);
                        frmSalvar.setVisible(true);
                        if (FrmSalvar.senha()) {
                            deletarPlaceboLote((Integer) tblLotes.getValueAt(tblLotes.getSelectedRow(), 0));
                            DefaultTableModel model = (DefaultTableModel) tblLotes.getModel();
                            model.removeRow(tblLotes.getSelectedRow());
                            //readLotePlacebo(placebo_id);
                        }
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Erro ao atulalizar dados: " + e);
                }
            }
        }
    }//GEN-LAST:event_tblLotesKeyPressed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void txtPesquisar1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisar1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisar1KeyReleased

    private void tblAuditoriaPadraoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAuditoriaPadraoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblAuditoriaPadraoMouseClicked

    private void tblAuditoriaPadraoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblAuditoriaPadraoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblAuditoriaPadraoKeyPressed

    private void btnEditarLote1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarLote1ActionPerformed
        if (tblPadrao.getSelectedRow() != -1) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            Integer id = ((Integer) tblPadrao.getValueAt(tblPadrao.getSelectedRow(), 0));
            FrmPadroesHistorico frm = new FrmPadroesHistorico(null, true, id);
            frm.setVisible(true);
            readPadroes();
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_btnEditarLote1ActionPerformed

    private void btnEditarLote2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarLote2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarLote2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPadroes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPadroes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPadroes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPadroes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPadroes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnAdicionarLote;
    private javax.swing.JButton btnAtualizar;
    public static javax.swing.JButton btnEditar;
    public static javax.swing.JButton btnEditarLote;
    public static javax.swing.JButton btnEditarLote1;
    public static javax.swing.JButton btnEditarLote2;
    public static javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFechar;
    public static javax.swing.JButton btnImprimir;
    public static javax.swing.JButton btnNovo;
    public static javax.swing.JButton btnRemoverLote;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JToolBar.Separator jSeparator11;
    private javax.swing.JToolBar.Separator jSeparator12;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel pnlDados;
    private javax.swing.JPanel pnlDadosProduto;
    private javax.swing.JPanel pnlLotesPlacebo;
    private javax.swing.JPanel pnlPlacebo;
    private javax.swing.JTabbedPane pnlPlacebos;
    private javax.swing.JTable tblAuditoriaPadrao;
    private javax.swing.JTable tblLotes;
    private javax.swing.JTable tblPadrao;
    private javax.swing.JTextField txtCodMaterial;
    private javax.swing.JTextField txtCodMetodo;
    private javax.swing.JTextField txtIdProduto;
    private javax.swing.JTextField txtMetodo;
    private javax.swing.JTextField txtMetodo1;
    private javax.swing.JTextField txtNomeMaterial;
    private javax.swing.JTextField txtObs;
    private javax.swing.JTextField txtPesquisar;
    private javax.swing.JTextField txtPesquisar1;
    public static javax.swing.JTextField txtSetor;
    private javax.swing.JTextField txtTipo;
    // End of variables declaration//GEN-END:variables

    public final void readPadroes() {
        DefaultTableModel model = (DefaultTableModel) tblPadrao.getModel();
        PadroesDAO padrDAO = new PadroesDAO();
        model.setNumRows(0);
        try {
            for (Padroes padr : padrDAO.findEntities(Padroes.class)) {
                model.addRow(new Object[]{
                    padr.getId(),
                    padr.getPadroesConfig().getId(),
                    padr.getPadroesConfig().getCodigoPadrao(),
                    padr.getPadroesConfig().getNomePadrao(),
                    padr.getPadroesConfig().getCodigoSap(),
                    padr.getPadroesConfig().getCasNumber(),
                    padr.getPadroesConfig().getControleEspecial(),
                    null,
                    null,
                    padr.getVersion()
                });
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: readPadroes " + ex);
        }
    }

    public final void readAuditoriaPadroes() {
//        DefaultTableModel model = (DefaultTableModel) tblAuditoriaPadrao.getModel();
//        PadroesDAO padrDAO = new PadroesDAO();
//        model.setNumRows(0);
//        try {
//            for (Padroes padr : padrDAO.findEntities(Padroes.class)) {
//                model.addRow(new Object[]{
//                    padr.getPadroesConfig().getId(),
//                    padr.getPadroesConfig().getCodigoPadrao(),
//                    padr.getPadroesConfig().getNomePadrao(),
//                    padr.getPadroesConfig().getCodigoSap(),
//                    padr.getPadroesConfig().getCasNumber(),
//                    padr.getPadroesConfig().getControleEspecial(),
//                    null,
//                    null,
//                    padr.getVersion()
//                });
//            }
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + ex);
//        }
    }

    public final void readLotePlacebo(Integer id) {
//        DefaultTableModel model = (DefaultTableModel) tblLotes.getModel();
//        PlaceboDAO placeboDAO = new PlaceboDAO();
//        model.setNumRows(0);
//        for (Placebo placebo : placeboDAO.readLotePlacebo(id)) {
//            model.addRow(new Object[]{
//                placebo.getPlacebo_lote_id(),
//                placebo.getLote_placebo(),
//                placebo.getQuantidade(),
//                DataHora.getStringDate(placebo.getData_fabricacao()),
//                placebo.getData_validade() != null
//                ? placebo.getData_validade().before(DataHora.getTimestampDate(DataHora.getStringDate(new Date())))
//                ? "Vencido"
//                : DataHora.getStringDate(placebo.getData_validade()) : null,
//                DataHora.getStringDate(placebo.getData_solicitacao()),
//                DataHora.getStringDate(placebo.getData_recebimento()),
//                placebo.getObs()
//            });
//
//        }
    }

    private void carregarDados(Integer id) {
//        PlaceboAcesso Acesso = new PlaceboAcesso();
//        if (Acesso.verificarAbrirDados()) {
//            placebo_id = id;
//            pnlPlacebos.setEnabledAt(0, false);
//            pnlPlacebos.setEnabledAt(1, true);
//            pnlPlacebos.setSelectedIndex(1);
//            Placebo placebo = new Placebo();
//            placebo.setPlacebo_id(placebo_id);
//            PlaceboDAO placeboDAO = new PlaceboDAO();
//            placeboDAO.selectPlacebo(placebo);
//            txtIdProduto.setText(String.valueOf(placebo.getMaterial().getMaterial_id()));
//            txtCodMaterial.setText(placebo.getMaterial().getCod_material());
//            txtNomeMaterial.setText(placebo.getMaterial().getNome_material());
//            txtTipo.setText(placebo.getMaterial().getTipo());
//            txtCodMetodo.setText(placebo.getMetodologia().getCod_metodo());
//            txtMetodo.setText(placebo.getMetodologia().getMetodo());
//            txtSetor.setText(placebo.getSetor().getSigla_setor());
//            txtVaga.setText(String.valueOf(placebo.getVaga_placebo_id()));
//            txtObs.setText(placebo.getObs().toUpperCase());
//            readLotePlacebo(id);
//        }
    }

    private void fecharDados() {
        pnlPlacebos.setEnabledAt(0, true);
        pnlPlacebos.setEnabledAt(1, false);
        pnlPlacebos.setSelectedIndex(0);
        readPadroes();
    }

    private void deletar(int id) {
//        PlaceboAcesso Acesso = new PlaceboAcesso();
//        if (Acesso.verificarDeletarDados()) {
        PadroesDAO padrDAO = new PadroesDAO();
        try {
            int dialogResult = JOptionPane.showConfirmDialog(null,
                    "Realmente deseja excluir esse Padrão?\n "
                    + "Isso irá apagar todos os dados relacionados a esse registro!",
                    "Aviso", JOptionPane.YES_NO_OPTION);
            if (dialogResult == 0) {
                FrmSalvar frmSalvar = new FrmSalvar(null, true);
                frmSalvar.setVisible(true);
                if (FrmSalvar.senha()) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    padrDAO.remover(Padroes.class, id);
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atulalizar dados: " + e);
        } finally {
            readPadroes();
            readAuditoriaPadroes();
        }
//        }
    }

    private void deletarPlaceboLote(int id) {
//        PlaceboAcesso Acesso = new PlaceboAcesso();
//        if (Acesso.verificarDeletarLote()) {
//            Placebo placebo = new Placebo();
//            PlaceboDAO placeboDAO = new PlaceboDAO();
//            try {
//                placebo.setPlacebo_lote_id(id);
//                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
//                placeboDAO.deletePlaceboLote(placebo);
//                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
//            } catch (Exception e) {
//                JOptionPane.showMessageDialog(null, "Erro ao atulalizar dados: " + e);
//            }
//        }
    }

}
