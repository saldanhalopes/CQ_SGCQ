/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prati_sgcq.view;

import prati_sgcq.dao.UsuarioDAO;
import prati_sgcq.model.Usuario;
import prati_sgcq.util.Cript;
import java.awt.Cursor;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import javax.persistence.EntityNotFoundException;
import javax.persistence.NoResultException;
import javax.persistence.TransactionRequiredException;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import org.jboss.jandex.Main;
import prati_sgcq.dao.RegraAcessoDAO;
import prati_sgcq.dao.FalhaAcessoDAO;
import prati_sgcq.dao.SistemaDAO;
import prati_sgcq.model.FalhaAcesso;

/**
 *
 * @author rafael.lopes
 */
public class FrmLogin extends javax.swing.JFrame {

    Thread t1;

    /**
     * Creates new form frmLogin
     */
    public FrmLogin() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        setAlwaysOnTop(true);
        ImageIcon icone = new ImageIcon(getClass().getResource("/Imagem/icon_sgcq_48.png"));
        setIconImage(icone.getImage());
        setTitle("Controle de Qualidade - Login");
//      Sistema sys = new Sistema();
//      lblVersao.setText("Vers√£o: " + String.valueOf(sys.getSystemVersion()));
        bancoDados();
        prbCarregando.setVisible(false);
//        if (sys.systemUpdate()) {
//            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
//            final String exe = "java -jar M:\\controledequalidade_compartilhada\\CQ_Desktop\\CQ_Update.jar";
//            try {
//                Runtime.getRuntime().exec(exe);
//            } catch (IOException ex) {
//                Logger.getLogger(FrmLogin.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
//            System.exit(0);
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSenha = new javax.swing.JPasswordField();
        lblCapslock = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblBancoDados = new javax.swing.JLabel();
        lblVersao = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        prbCarregando = new javax.swing.JProgressBar();
        btnSair = new javax.swing.JButton();
        btnEntrar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_usuario_neutro.png"))); // NOI18N

        txtUsuario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUsuarioKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_senha.png"))); // NOI18N

        txtSenha.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSenhaFocusGained(evt);
            }
        });
        txtSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSenhaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSenhaKeyReleased(evt);
            }
        });

        lblCapslock.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        lblCapslock.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCapslock, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtSenha)
                        .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(33, 33, 33)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCapslock, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jLayeredPane2.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(txtUsuario, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(txtSenha, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(lblCapslock, javax.swing.JLayeredPane.DEFAULT_LAYER);

        getContentPane().add(jLayeredPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 290, 180));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Controle de Qualidade");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 40));

        lblBancoDados.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(lblBancoDados, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 16, 20));

        lblVersao.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblVersao.setForeground(new java.awt.Color(255, 255, 255));
        lblVersao.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblVersao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_update.png"))); // NOI18N
        getContentPane().add(lblVersao, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, -1));

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/fundo_login_top.png"))); // NOI18N
        jLabel5.setOpaque(true);
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 50));

        prbCarregando.setIndeterminate(true);
        getContentPane().add(prbCarregando, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 64, 270, 20));

        btnSair.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSair.setForeground(new java.awt.Color(255, 255, 255));
        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_cancelar.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.setBorder(null);
        btnSair.setContentAreaFilled(false);
        btnSair.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btnSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSairMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSairMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnSairMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnSairMouseReleased(evt);
            }
        });
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, -1, 40));

        btnEntrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEntrar.setForeground(new java.awt.Color(255, 255, 255));
        btnEntrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_fechar_painel.png"))); // NOI18N
        btnEntrar.setText("Entrar");
        btnEntrar.setBorder(null);
        btnEntrar.setContentAreaFilled(false);
        btnEntrar.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        btnEntrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEntrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEntrarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnEntrarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnEntrarMouseReleased(evt);
            }
        });
        btnEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEntrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, -1, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/fundo_login.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 290, 280));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsuarioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtSenha.requestFocus();
        }
    }//GEN-LAST:event_txtUsuarioKeyPressed

    private void txtSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSenhaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            bloquearCamposLogin();
            t1 = new Thread() {
                @Override
                public void run() {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    prbCarregando.setVisible(true);
                    acessarSistema();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            };
            t1.start();
        }
    }//GEN-LAST:event_txtSenhaKeyPressed

    private void btnEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrarActionPerformed
        bloquearCamposLogin();
        t1 = new Thread() {
            @Override
            public void run() {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                prbCarregando.setVisible(true);
                acessarSistema();
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
        };
        t1.start();
    }//GEN-LAST:event_btnEntrarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSairActionPerformed

    private void txtSenhaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSenhaKeyReleased
        capslock();
    }//GEN-LAST:event_txtSenhaKeyReleased

    private void txtSenhaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSenhaFocusGained
        capslock();
    }//GEN-LAST:event_txtSenhaFocusGained

    private void btnEntrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEntrarMouseEntered
        setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        //btnEntrar.setBorder(new SoftBevelBorder(SoftBevelBorder.LOWERED, Color.DARK_GRAY, Color.lightGray));
    }//GEN-LAST:event_btnEntrarMouseEntered

    private void btnEntrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEntrarMouseExited
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        //btnEntrar.setBorder(null);
    }//GEN-LAST:event_btnEntrarMouseExited

    private void btnSairMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSairMouseEntered
        setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        //btnSair.setBorder(new SoftBevelBorder(SoftBevelBorder.LOWERED, Color.DARK_GRAY, Color.lightGray));
    }//GEN-LAST:event_btnSairMouseEntered

    private void btnSairMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSairMouseExited
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        //btnSair.setBorder(null);
    }//GEN-LAST:event_btnSairMouseExited

    private void btnEntrarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEntrarMousePressed
        //btnEntrar.setBorder(new SoftBevelBorder(SoftBevelBorder.RAISED, Color.DARK_GRAY, Color.lightGray));
    }//GEN-LAST:event_btnEntrarMousePressed

    private void btnEntrarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEntrarMouseReleased
        //btnEntrar.setBorder(new SoftBevelBorder(SoftBevelBorder.LOWERED, Color.DARK_GRAY, Color.lightGray));
    }//GEN-LAST:event_btnEntrarMouseReleased

    private void btnSairMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSairMousePressed
        //btnSair.setBorder(new SoftBevelBorder(SoftBevelBorder.RAISED, Color.DARK_GRAY, Color.lightGray));
    }//GEN-LAST:event_btnSairMousePressed

    private void btnSairMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSairMouseReleased
        //btnSair.setBorder(new SoftBevelBorder(SoftBevelBorder.LOWERED, Color.DARK_GRAY, Color.lightGray));
    }//GEN-LAST:event_btnSairMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEntrar;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLabel lblBancoDados;
    private javax.swing.JLabel lblCapslock;
    private javax.swing.JLabel lblVersao;
    private javax.swing.JProgressBar prbCarregando;
    private javax.swing.JPasswordField txtSenha;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

    private void userSenhaInvalidos(String texto) {
        JOptionPane op = new JOptionPane(texto, JOptionPane.INFORMATION_MESSAGE);
        JDialog dialog = op.createDialog("Erro de Login");
        dialog.setAlwaysOnTop(true);
        dialog.setModal(false);
        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        dialog.setVisible(true);
    }

    public void acessarSistema() {
        Usuario user = new Usuario();
        UsuarioDAO userDAO = new UsuarioDAO();
        RegraAcessoDAO regraAcessoDAO = new RegraAcessoDAO();
        FalhaAcessoDAO falhaAcessoDAO = new FalhaAcessoDAO();
        if ("".equals(txtUsuario.getText().toLowerCase()) || "".equals(txtSenha.getText())) {
            userSenhaInvalidos("Usu√°rio ou Senha inv√°lidos");
            limparCamposLogin();
            desbloquearCamposLogin();
        } else {
            user.setUsuario(txtUsuario.getText().toLowerCase());
            user = userDAO.buscaUsuarioByName(user);
            Integer falhas = user.getFailed_access_count() == null ? 0 : user.getFailed_access_count();
            try {
                if (user.getPass().equals(Cript.SHA(txtSenha.getText()))) {
                    if (!(user.getLock() == null ? false : user.getLock())) {
                        if (!user.getChange_pass()) {
                            System.setProperty("user_id", user.getId().toString());
                            System.setProperty("user", user.getUsuario());
                            System.setProperty("acesso", regraAcessoDAO.stringAcesso(user.getGrupo().getId()));
                            if (falhas > 0) {
                                userSenhaInvalidos("N√∫mero de falhas na tentativas de Login: " + falhas);
                                userDAO.salvarFalhaLogin(user, false);
                            }
                            userDAO.atualizarLoginUsuario(user);
                            desbloquearCamposLogin();
                            showPrincipalScreen();
                            desbloquearCamposLogin();
                            this.dispose();
                        } else {
                            showAlterarSenha(user.getId());
                            limparCamposLogin();
                            desbloquearCamposLogin();
                        }
                    } else {
                        userSenhaInvalidos("Usu√°rio Bloqueado");
                        limparCamposLogin();
                        desbloquearCamposLogin();
                    }
                } else {
                    Integer falha;
                    try {
                        falha = falhaAcessoDAO.findById(FalhaAcesso.class, 1).getNumeroFalha();
                    } catch (Exception e) {
                        falha = 10;
                    }
                    if (falhas > (falha == null ? 10 : falha)) {
                        userDAO.salvarBloqueioUsuario(user);
                        userSenhaInvalidos("Usu√°rio Bloqueado");
                    } else {
                        userSenhaInvalidos("Senha inv√°lida");
                        userDAO.salvarFalhaLogin(user, true);
                    }
                    limparCamposLogin();
                    desbloquearCamposLogin();
                }
            } catch (EntityNotFoundException | NoResultException | TransactionRequiredException e) {
                userSenhaInvalidos("Usu√°rio n√£o Encontrado");
                limparCamposLogin();
                desbloquearCamposLogin();
            } catch (Exception ex) {
                userSenhaInvalidos("Erro ao Abrir" + ex.toString());
                limparCamposLogin();
                desbloquearCamposLogin();
            }
        }
    }

    private void showPrincipalScreen() {
        try {
            FrmMenu frm = new FrmMenu();
            frm.setVisible(true);
        } catch (Exception ex) {
            System.out.println(ex.toString());
        }
    }

    private void showAlterarSenha(Integer id) {
        try {
            Usuario user = new Usuario();
            user.setId(id);
            new FrmAlterarSenha(this, false, user).setVisible(true);
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            desbloquearCamposLogin();
            prbCarregando.setVisible(false);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Abrir");
        }
    }

    public void limparCamposLogin() {
        txtUsuario.setText("");
        txtSenha.setText("");
    }

    public void bloquearCamposLogin() {
        txtUsuario.setEnabled(false);
        txtSenha.setEnabled(false);
        btnEntrar.setEnabled(false);
        btnSair.setEnabled(false);
    }

    public void desbloquearCamposLogin() {
        txtUsuario.setEnabled(true);
        txtSenha.setEnabled(true);
        btnEntrar.setEnabled(true);
        btnSair.setEnabled(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        prbCarregando.setVisible(false);
    }

    private void capslock() {
        ImageIcon icone = new ImageIcon(getClass().getResource("/Imagem/icon_alerta.png"));
        boolean capsLigado = Toolkit.getDefaultToolkit().getLockingKeyState(
                KeyEvent.VK_CAPS_LOCK);
        if (capsLigado) {
            lblCapslock.setText("Caps Lock Ligado!");
            lblCapslock.setIcon(icone);
            repaint();
        } else {
            lblCapslock.setText(null);
            lblCapslock.setIcon(null);
            repaint();
        }
    }

    private void bancoDados() {
        ImageIcon icone_conect = new ImageIcon(getClass().getResource("/Imagem/icon_database_accept.png"));
        ImageIcon icone_erro = new ImageIcon(getClass().getResource("/Imagem/icon_database_error.png"));
        if (SistemaDAO.isBancoDadosConectado()) {
            lblBancoDados.setIcon(icone_conect);
            lblBancoDados.setToolTipText("Banco de Dados: Conectado");
            repaint();
        } else {
            lblBancoDados.setIcon(icone_erro);
            lblBancoDados.setToolTipText("Banco de Dados: Desconectado");
            repaint();
        }
    }

}
