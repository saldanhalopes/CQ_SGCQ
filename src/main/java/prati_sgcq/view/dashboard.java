/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prati_sgcq.view;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityNotFoundException;
import javax.persistence.NoResultException;
import javax.persistence.TransactionRequiredException;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import prati_sgcq.dao.FalhaAcessoDAO;
import prati_sgcq.dao.RegraAcessoDAO;
import prati_sgcq.dao.SistemaDAO;
import prati_sgcq.dao.UsuarioDAO;
import prati_sgcq.model.FalhaAcesso;
import prati_sgcq.model.Usuario;
import prati_sgcq.util.Cript;

/**
 *
 * @author Rahmans
 */
public class dashboard extends javax.swing.JFrame implements Runnable {

    int xMouse;
    int yMouse;

    public dashboard() {
        initComponents();
        setBackground(new Color(0, 0, 0, 0));
        setLocationRelativeTo(null);
        ImageIcon icone = new ImageIcon(getClass().getResource("/Imagem/icon_sgcq_48.png"));
        setIconImage(icone.getImage());
        setTitle("Lab LIMS - Login");
//      Sistema sys = new Sistema();
//      lblVersao.setText("Versão: " + String.valueOf(sys.getSystemVersion()));

//        progress progress = new progress();
//        progress.setVisible(true);
bancoDados();
//        new Thread() {
//            @Override
//            public void run() {
//                bancoDados();
//                //progress.dispose();
//            }
//        }.start();

//        if (sys.systemUpdate()) {
//            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
//            final String exe = "java -jar M:\\controledequalidade_compartilhada\\CQ_Desktop\\CQ_Update.jar";
//            try {
//                Runtime.getRuntime().exec(exe);
//            } catch (IOException ex) {
//                Logger.getLogger(FrmLogin.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
//            System.exit(0);
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnEntrar = new javax.swing.JButton();
        btnDashboard1 = new javax.swing.JButton();
        btnDashboard3 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        txtUsuario = new javax.swing.JTextField();
        txtSenha = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();
        lblVersao = new javax.swing.JLabel();
        lblCapslock = new javax.swing.JLabel();
        lblBancoDados = new javax.swing.JLabel();
        btnSair = new javax.swing.JButton();
        lblDashboard = new javax.swing.JLabel();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setSize(new java.awt.Dimension(1000, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setForeground(new java.awt.Color(102, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Usuário");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Senha");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, -1, -1));

        btnEntrar.setBackground(new java.awt.Color(0, 153, 153));
        btnEntrar.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnEntrar.setForeground(new java.awt.Color(255, 255, 255));
        btnEntrar.setText("Entrar");
        btnEntrar.setBorder(null);
        btnEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEntrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, 420, 60));

        btnDashboard1.setBackground(new java.awt.Color(123, 123, 123));
        btnDashboard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_user_48.png"))); // NOI18N
        btnDashboard1.setContentAreaFilled(false);
        btnDashboard1.setFocusable(false);
        jPanel1.add(btnDashboard1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, 50, 50));

        btnDashboard3.setBackground(new java.awt.Color(123, 123, 123));
        btnDashboard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_password.png"))); // NOI18N
        btnDashboard3.setContentAreaFilled(false);
        btnDashboard3.setFocusable(false);
        jPanel1.add(btnDashboard3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 50, 50));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, 360, 10));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 200, 360, 10));

        txtUsuario.setBackground(new java.awt.Color(102, 102, 102));
        txtUsuario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtUsuario.setForeground(new java.awt.Color(255, 255, 255));
        txtUsuario.setBorder(null);
        txtUsuario.setName(""); // NOI18N
        txtUsuario.setOpaque(false);
        txtUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUsuarioKeyReleased(evt);
            }
        });
        jPanel1.add(txtUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 350, 35));

        txtSenha.setBackground(new java.awt.Color(102, 102, 102));
        txtSenha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSenha.setForeground(new java.awt.Color(255, 255, 255));
        txtSenha.setBorder(null);
        txtSenha.setOpaque(false);
        txtSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSenhaFocusGained(evt);
            }
        });
        txtSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSenhaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSenhaKeyReleased(evt);
            }
        });
        jPanel1.add(txtSenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, 350, 35));

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_logo_lab_lims.png"))); // NOI18N
        jLabel11.setOpaque(true);
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 90));

        lblVersao.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblVersao.setForeground(new java.awt.Color(255, 255, 255));
        lblVersao.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblVersao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_update.png"))); // NOI18N
        jPanel1.add(lblVersao, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, -1, -1));

        lblCapslock.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblCapslock.setForeground(new java.awt.Color(255, 204, 0));
        jPanel1.add(lblCapslock, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 330, 360, -1));

        lblBancoDados.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(lblBancoDados, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 470, 30, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 500, 510));

        btnSair.setBackground(new java.awt.Color(123, 123, 123));
        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_close_window.png"))); // NOI18N
        btnSair.setContentAreaFilled(false);
        btnSair.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSair.setFocusable(false);
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 0, 40, 40));

        lblDashboard.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        lblDashboard.setForeground(new java.awt.Color(255, 255, 255));
        lblDashboard.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblDashboard.setText("Login");
        getContentPane().add(lblDashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, 130, 80));

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/Background2.png"))); // NOI18N
        lblBackground.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lblBackgroundMouseDragged(evt);
            }
        });
        lblBackground.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblBackgroundMousePressed(evt);
            }
        });
        getContentPane().add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 600));

        setSize(new java.awt.Dimension(500, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblBackgroundMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackgroundMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_lblBackgroundMousePressed

    private void lblBackgroundMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackgroundMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_lblBackgroundMouseDragged

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSairActionPerformed

    private void txtSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSenhaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            bloquearCamposLogin();
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            acessarSistema();
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_txtSenhaKeyPressed

    private void txtUsuarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsuarioKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtSenha.requestFocus();
        }
    }//GEN-LAST:event_txtUsuarioKeyReleased

    private void btnEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrarActionPerformed
        bloquearCamposLogin();
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        acessarSistema();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnEntrarActionPerformed

    private void txtSenhaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSenhaKeyReleased
        capslock();
    }//GEN-LAST:event_txtSenhaKeyReleased

    private void txtSenhaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSenhaFocusGained
        capslock();
    }//GEN-LAST:event_txtSenhaFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDashboard1;
    private javax.swing.JButton btnDashboard3;
    private javax.swing.JButton btnEntrar;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblBancoDados;
    private javax.swing.JLabel lblCapslock;
    private javax.swing.JLabel lblDashboard;
    private javax.swing.JLabel lblVersao;
    private javax.swing.JPasswordField txtSenha;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        synchronized (this) {
            new dashboard().setVisible(true);
        }
    }

    private void userSenhaInvalidos(String texto) {
        JOptionPane op = new JOptionPane(texto, JOptionPane.INFORMATION_MESSAGE);
        JDialog dialog = op.createDialog("Erro de Login");
        dialog.setAlwaysOnTop(true);
        dialog.setModal(false);
        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        dialog.setVisible(true);
    }

    public void acessarSistema() {
        Usuario user = new Usuario();
        UsuarioDAO userDAO = new UsuarioDAO();
        RegraAcessoDAO regraAcessoDAO = new RegraAcessoDAO();
        FalhaAcessoDAO falhaAcessoDAO = new FalhaAcessoDAO();
        if ("".equals(txtUsuario.getText().toLowerCase()) || "".equals(txtSenha.getText())) {
            userSenhaInvalidos("Usuário ou Senha inválidos");
            limparCamposLogin();
            desbloquearCamposLogin();
        } else {
            user.setUsuario(txtUsuario.getText().toLowerCase());
            user = userDAO.buscaUsuarioByName(user);
            Integer falhas = user.getFailed_access_count() == null ? 0 : user.getFailed_access_count();
            try {
                if (user.getPass().equals(Cript.SHA(txtSenha.getText()))) {
                    if (!(user.getLock() == null ? false : user.getLock())) {
                        if (!user.getChange_pass()) {
                            System.setProperty("user_id", user.getId().toString());
                            System.setProperty("user", user.getUsuario());
                            System.setProperty("acesso", regraAcessoDAO.stringAcesso(user.getGrupo().getId()));
                            if (falhas > 0) {
                                userSenhaInvalidos("Número de falhas na tentativas de Login: " + falhas);
                                userDAO.salvarFalhaLogin(user, false);
                            }
                            userDAO.atualizarLoginUsuario(user);
                            desbloquearCamposLogin();
                            showPrincipalScreen();
                            desbloquearCamposLogin();
                            this.dispose();
                        } else {
                            showAlterarSenha(user.getId());
                            limparCamposLogin();
                            desbloquearCamposLogin();
                        }
                    } else {
                        userSenhaInvalidos("Usuário Bloqueado");
                        limparCamposLogin();
                        desbloquearCamposLogin();
                    }
                } else {
                    Integer falha;
                    try {
                        falha = falhaAcessoDAO.findById(FalhaAcesso.class, 1).getNumeroFalha();
                    } catch (Exception e) {
                        falha = 10;
                    }
                    if (falhas > (falha == null ? 10 : falha)) {
                        userDAO.salvarBloqueioUsuario(user);
                        userSenhaInvalidos("Usuário Bloqueado");
                    } else {
                        userSenhaInvalidos("Senha inválida");
                        userDAO.salvarFalhaLogin(user, true);
                    }
                    limparCamposLogin();
                    desbloquearCamposLogin();
                }
            } catch (EntityNotFoundException | NoResultException | TransactionRequiredException e) {
                userSenhaInvalidos("Usuário não Encontrado");
                limparCamposLogin();
                desbloquearCamposLogin();
            } catch (Exception ex) {
                userSenhaInvalidos("Erro ao Abrir" + ex.toString());
                limparCamposLogin();
                desbloquearCamposLogin();
            }
        }
    }

    private void showPrincipalScreen() {
        try {
            FrmMenu frm = new FrmMenu();
            frm.setVisible(true);
        } catch (Exception ex) {
            System.out.println(ex.toString());
        }
    }

    private void showAlterarSenha(Integer id) {
        try {
            Usuario user = new Usuario();
            user.setId(id);
            new FrmAlterarSenha(this, false, user).setVisible(true);
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            desbloquearCamposLogin();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Abrir");
        }
    }

    public void limparCamposLogin() {
        txtUsuario.setText("");
        txtSenha.setText("");
    }

    public void bloquearCamposLogin() {
        txtUsuario.setEnabled(false);
        txtSenha.setEnabled(false);
        btnEntrar.setEnabled(false);
        btnSair.setEnabled(false);
    }

    public void desbloquearCamposLogin() {
        txtUsuario.setEnabled(true);
        txtSenha.setEnabled(true);
        btnEntrar.setEnabled(true);
        btnSair.setEnabled(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }

    private void capslock() {
        ImageIcon icone = new ImageIcon(getClass().getResource("/Imagem/icon_alerta.png"));
        boolean capsLigado = Toolkit.getDefaultToolkit().getLockingKeyState(
                KeyEvent.VK_CAPS_LOCK);
        if (capsLigado) {
            lblCapslock.setText("Caps Lock Ligado!");
            lblCapslock.setIcon(icone);
            repaint();
        } else {
            lblCapslock.setText(null);
            lblCapslock.setIcon(null);
            repaint();
        }
    }

    private void bancoDados() {
        ImageIcon icone_conect = new ImageIcon(getClass().getResource("/Imagem/icon_database_accept.png"));
        ImageIcon icone_erro = new ImageIcon(getClass().getResource("/Imagem/icon_database_error.png"));
        if (SistemaDAO.isBancoDadosConectado()) {
            lblBancoDados.setIcon(icone_conect);
            lblBancoDados.setToolTipText("Banco de Dados: Conectado");
            repaint();
        } else {
            lblBancoDados.setIcon(icone_erro);
            lblBancoDados.setToolTipText("Banco de Dados: Desconectado");
            repaint();
        }
    }

}
